syntax = "proto3";
option go_package = "github.com/BelLeonid/lavaPB/lavaPB";
package cosmos.base.tendermint.v1beta1;
import "google/protobuf/timestamp.proto";

// Generic get requestm used for cosmos.base.tendermint.v1beta1.Service
message GetRequest {
}

// Used when we need to pass height, GetValidatorSetByHeight
message GetHeightRequest {
  int64 height = 1;
}

message Parts {
  int64 total	= 1;
  string hash	= 2;
}

message BasicBlockInfo {
  uint64 block	= 1;
  uint64 app	= 2;
}

message Header {
  BasicBlockInfo version = 1;
  string chain_id = 2;
  int64 height = 3;
  google.protobuf.Timestamp time	= 4;
  BlockID last_block_id	= 5;
  bytes last_commit_hash = 6;
  bytes data_hash = 7;
  bytes validators_hash = 8;
  bytes next_validators_hash	= 9;
  bytes consensus_hash	= 10;
  bytes app_hash	= 11;
  bytes last_results_hash = 12;
  bytes evidence_hash	= 13;
  bytes proposer_address = 14;
}

message Data {
  repeated bytes txs = 1;
}

enum VOTE_TYPE {
  SIGNED_MSG_TYPE_UNKNOWN = 0;
  SIGNED_MSG_TYPE_PREVOTE = 1;
  SIGNED_MSG_TYPE_PRECOMMIT = 2;
  SIGNED_MSG_TYPE_PROPOSAL = 3;
}

message Vote {
  VOTE_TYPE type	= 1;
  int64 height = 2;
  int32 round	= 3;
  BlockID block_id	= 4;
  google.protobuf.Timestamp timestamp	= 5;
  bytes validator_address	= 6;
  int32 validator_index	= 7;
  bytes signature	= 8;
}

message DuplicateEvidence {
  Vote vote_a = 1;
  Vote vote_b	= 2;
  int64 total_voting_power	= 3;
  int64 validator_power	= 4;
  google.protobuf.Timestamp timestamp	= 5;
}

message Commit {
  string height	= 1;
  int32 round	= 2;
  BlockID block_id = 3;
  repeated Signatures signatures	= 4;
}
 
message SignedHeader {
  Header header	= 1;
  Commit commit	= 2;
}

message PublicKey {
  string ed25519	= 1;
  string secp256k1	= 2;
}

message Validator {
  string address	= 1;
  PublicKey pub_key	= 2;
  int64 voting_power	= 3;
  int64 proposer_priority	= 4;
}

message ValidatorSet {
  repeated Validator validators	= 1;
  Validator proposer	= 2;
  int64 total_voting_power	= 3;
}

message ConflictingBlock {
  SignedHeader signed_header	= 1;
  ValidatorSet validator_set	= 2;
}

message AttackEvidence {
  ConflictingBlock conflicting_block	= 1;
  int64 common_height	= 2;
  repeated Validator byzantine_validators	= 3;
  int64 total_voting_power	= 4;
  google.protobuf.Timestamp timestamp	= 5;
}

message EvidencePiece {
  DuplicateEvidence duplicate_vote_evidence = 1;
  AttackEvidence light_client_attack_evidence = 2;
}

message Evidence {
  repeated EvidencePiece evidence = 1;
}

enum BLOCK_ID_FLAG {
  BLOCK_ID_FLAG_UNKNOWN = 0;
  BLOCK_ID_FLAG_ABSENT = 1;
  BLOCK_ID_FLAG_COMMIT = 2;
  BLOCK_ID_FLAG_NIL = 3;
}

message Signatures {
  BLOCK_ID_FLAG block_id_flag = 1;
  bytes validator_address	= 2;
  google.protobuf.Timestamp timestamp	= 3;
  bytes signature = 4;
}

message LastCommit {
  int64 height = 1;
  int32 round	= 2;
  BlockID block_id = 3;
  repeated Signatures signatures	= 4;
}

message Block {
  Header header	= 1;
  Data data = 2;
  Evidence evidence = 3;
  LastCommit last_commit = 4;
}

message PartsetHeader{
  int64 total	= 1;
  bytes hash	= 2;
}

message BlockID {
  bytes hash = 1;
  PartsetHeader part_set_header	= 2;
}

message GetBlockByHeightResponse {
  BlockID block_id	= 1;
  Block block = 2;
}

message GetLatestBlockResponse {
  BlockID block_id	= 1;
  Block block = 2;
}

message Pagination {
  bytes next_key = 1;
  uint64 total	= 2;
}

//Another specification of PublicKey with different fields
message PublicKey2 {
  string type_url	= 1;
  bytes value	= 2;
}

//Another specification of Validator with different pubkey
message Validator2 {
  string address	= 1;
  PublicKey2 pub_key	= 2;
  int64 voting_power	= 3;
  int64 proposer_priority	= 4;
}

message GetLatestValidatorSetResponse {
  int64 block_height	= 1;
  repeated Validator2 validators	= 2;
  Pagination pagination	= 3;
}

message Other {
  string tx_index	= 1;
  string rpc_address	= 2;
}

message ProtocolVersion {
  uint64 p2p	= 1;
  uint64 block	= 2;
  uint64 app	= 3;
}

message DefaultNodeInfo {
  ProtocolVersion protocol_version = 1;
  string default_node_id	= 2;
  string listen_addr	= 3;
  string network	= 4;
  string version	= 5;
  bytes channels	= 6;
  string moniker	= 7;
  Other other	= 8;
}

message VersionInfo {
  string path	= 1;
  string version	= 2;
  string sum	= 3;
}

message ApplicationVersion {
  string name	= 1;
  string app_name	= 2;
  string version	= 3;
  string git_commit	= 4;
  string build_tags	= 5;
  string go_version	= 6;
  repeated VersionInfo build_deps	= 7;
}

message GetNodeInfoResponse {
  DefaultNodeInfo default_node_info	= 1;
  ApplicationVersion application_version	= 2;
}

message GetSyncingResponse {
  bool syncing = 1;
}

message GetValidatorSetByHeightResponse {
  string block_height	= 1;
  repeated Validator2 validators	= 2;
  Pagination pagination	= 3;
}

service Service {
  rpc GetBlockByHeight (GetHeightRequest) returns (GetBlockByHeightResponse) {}
  rpc GetLatestBlock (GetRequest) returns (GetLatestBlockResponse) {}
  rpc GetLatestValidatorSet (GetRequest) returns (GetLatestValidatorSetResponse) {}
  rpc GetNodeInfo (GetRequest) returns (GetNodeInfoResponse) {}
  rpc GetSyncing (GetRequest) returns (GetSyncingResponse) {}
  rpc GetValidatorSetByHeight (GetHeightRequest) returns (GetValidatorSetByHeightResponse) {}
}